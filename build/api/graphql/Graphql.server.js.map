{"version":3,"file":"Graphql.server.js","names":["_expressBasicAuth","_interopRequireDefault","require","_server","_config","_drainHttpServer","_express","_schema","_resolvers","e","__esModule","default","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","GraphQLServer","constructor","app","App","httpServer","HttpServer","initialize","_this","graphQLServer","ApolloServer","typeDefs","GraphQLSchemaDef","get","resolvers","GraphQLSchemaResolvers","nodeEnv","Config","IConfigKey","NODE_ENV","includeStacktraceInErrorResponses","plugins","ApolloServerPluginDrainHttpServer","start","set","global","GraphQL","use","expressBasicAuth","users","root","challenge","expressMiddleware","context","_context","_ref","req","token","headers","_x","concat","PORT","_default","exports"],"sources":["../../../src/api/graphql/Graphql.server.ts"],"sourcesContent":["import express from \"express\";\nimport HTTP from \"node:http\";\nimport expressBasicAuth from \"express-basic-auth\";\nimport { ApolloServer } from \"@apollo/server\";\nimport { Config, IConfigKey } from \"@/config\";\nimport { ApolloServerPluginDrainHttpServer } from \"@apollo/server/plugin/drainHttpServer\";\nimport { expressMiddleware } from \"@apollo/server/express4\";\nimport GraphQLSchemaDef from \"@/api/graphql/schema\";\nimport GraphQLSchemaResolvers from \"@/api/graphql/resolvers\";\nimport ExpressEngine from \"@/app\";\n\nclass GraphQLServer {\n  private app: express.Application;\n  public httpServer: HTTP.Server;\n  constructor(app: typeof ExpressEngine) {\n    this.app = app.App;\n    this.httpServer = app.HttpServer;\n  }\n\n  public async initialize(): Promise<string> {\n    const graphQLServer = new ApolloServer({\n      typeDefs: new GraphQLSchemaDef().get(),\n      resolvers: new GraphQLSchemaResolvers().get(),\n      nodeEnv: Config.get<string>(IConfigKey.NODE_ENV),\n      includeStacktraceInErrorResponses: true,\n      plugins: [ApolloServerPluginDrainHttpServer({ httpServer: this.httpServer })]\n    });\n    await graphQLServer.start();\n    this.app.set(\"GraphQL\", graphQLServer);\n    (global as any).GraphQL = graphQLServer;\n    this.app.use(\n      \"/graphql\",\n      expressBasicAuth({\n        users: {\n          root: \"deamon\"\n        },\n        challenge: true\n      })\n    );\n    this.app.use(\n      \"/graphql\",\n      expressMiddleware(graphQLServer, {\n        context: async ({ req }) => ({ token: req.headers.token })\n      })\n    );\n    return `GraphQL server is running at http://localhost:${Config.get<number>(IConfigKey.PORT)}/graphql ðŸš€`;\n  }\n}\n\nexport default GraphQLServer;\n"],"mappings":"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","ignoreList":[]}
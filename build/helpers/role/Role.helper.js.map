{"version":3,"file":"Role.helper.js","names":["_Roles","require","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","RoleHelper","constructor","roles","ROLES","getRoleByName","name","_this","find","role","getRoles","_this2","_default","exports","default"],"sources":["../../../src/helpers/role/Role.helper.ts"],"sourcesContent":["import { ROLES } from \"@/config/role/Roles.config\";\nimport { IRole } from \"@/helpers/role/Role.definations\";\n\nclass RoleHelper {\n  private roles: ReadonlyArray<IRole>;\n  constructor() {\n    this.roles = ROLES;\n  }\n\n  public async getRoleByName(name: string): Promise<IRole> {\n    return this.roles.find((role) => role.name === name) as IRole;\n  }\n\n  public async getRoles(): Promise<IRole[]> {\n    return this.roles as IRole[];\n  }\n}\n\nexport default RoleHelper;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAAmD,SAAAC,mBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,cAAAC,CAAA,GAAAP,CAAA,CAAAK,CAAA,EAAAC,CAAA,GAAAE,CAAA,GAAAD,CAAA,CAAAE,KAAA,WAAAT,CAAA,gBAAAE,CAAA,CAAAF,CAAA,KAAAO,CAAA,CAAAG,IAAA,GAAAT,CAAA,CAAAO,CAAA,IAAAG,OAAA,CAAAC,OAAA,CAAAJ,CAAA,EAAAK,IAAA,CAAAV,CAAA,EAAAC,CAAA;AAAA,SAAAU,kBAAAd,CAAA,6BAAAC,CAAA,SAAAC,CAAA,GAAAa,SAAA,aAAAJ,OAAA,WAAAR,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAL,CAAA,CAAAgB,KAAA,CAAAf,CAAA,EAAAC,CAAA,YAAAe,MAAAjB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,UAAAlB,CAAA,cAAAkB,OAAAlB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,WAAAlB,CAAA,KAAAiB,KAAA;AAGnD,MAAME,UAAU,CAAC;EAEfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,KAAK,GAAGC,YAAK;EACpB;EAEaC,aAAaA,CAACC,IAAY,EAAkB;IAAA,IAAAC,KAAA;IAAA,OAAAX,iBAAA;MACvD,OAAOW,KAAI,CAACJ,KAAK,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,KAAKA,IAAI,CAAC;IAAU;EAChE;EAEaI,QAAQA,CAAA,EAAqB;IAAA,IAAAC,MAAA;IAAA,OAAAf,iBAAA;MACxC,OAAOe,MAAI,CAACR,KAAK;IAAY;EAC/B;AACF;AAAC,IAAAS,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcb,UAAU","ignoreList":[]}
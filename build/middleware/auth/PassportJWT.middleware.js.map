{"version":3,"file":"PassportJWT.middleware.js","names":["_helpers","require","_httpStatusCodes","_passport","_interopRequireDefault","_passportJwt","e","__esModule","default","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperty","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","PassportJWTMiddleware","constructor","secretOrKey","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","PassportJwtStrategy","JWTOptions","verify","payload","PassportJWTException","use","req","res","next","passport","authenticate","session","error","user","info","message","status","StatusCodes","UNAUTHORIZED","send","ApiErrorResponseHelper","getReasonPhrase","name","_default","exports"],"sources":["../../../src/middleware/auth/PassportJWT.middleware.ts"],"sourcesContent":["import { ApiErrorResponseHelper } from \"@/helpers\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { getReasonPhrase, StatusCodes } from \"http-status-codes\";\nimport passport from \"passport\";\nimport {\n  Strategy as PassportJwtStrategy,\n  ExtractJwt,\n  StrategyOptions,\n  StrategyOptionsWithoutRequest\n} from \"passport-jwt\";\n\ntype VerifiedCallback = (error: any, user?: unknown | false, info?: any) => void;\n\nclass PassportJWTMiddleware {\n  private JWTOptions: StrategyOptions = {\n    secretOrKey: \"secret\",\n    jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken()\n  };\n\n  private async verify(payload: Record<string, unknown>, done: VerifiedCallback) {\n    try {\n      done(null, {});\n    } catch (PassportJWTException) {\n      done(\"PassportJWTException\", false);\n    }\n  }\n\n  public JWTStrategy = new PassportJwtStrategy(\n    this.JWTOptions as unknown as StrategyOptionsWithoutRequest,\n    this.verify\n  );\n\n  public static use(req: Request, res: Response, next: NextFunction) {\n    passport.authenticate(\"jwt\", { session: false }, (error: any, user: any, info: any) => {\n      if (!user) {\n        if (info.message === \"No auth token\") {\n          return res\n            .status(StatusCodes.UNAUTHORIZED)\n            .send(\n              new ApiErrorResponseHelper(\n                StatusCodes.UNAUTHORIZED,\n                getReasonPhrase(StatusCodes.UNAUTHORIZED),\n                \"Access token is missing! please check the request\"\n              )\n            );\n        }\n        if (info.name === \"TokenExpiredError\") {\n          return res\n            .status(StatusCodes.UNAUTHORIZED)\n            .send(\n              new ApiErrorResponseHelper(\n                StatusCodes.UNAUTHORIZED,\n                getReasonPhrase(StatusCodes.UNAUTHORIZED),\n                \"Access token is expired\"\n              )\n            );\n        } else if (info.name === \"JsonWebTokenError\") {\n          return res\n            .status(StatusCodes.UNAUTHORIZED)\n            .send(\n              new ApiErrorResponseHelper(\n                StatusCodes.UNAUTHORIZED,\n                getReasonPhrase(StatusCodes.UNAUTHORIZED),\n                \"Invalid access token\"\n              )\n            );\n        }\n      }\n    })(req, res, next);\n  }\n}\n\nexport default PassportJWTMiddleware;\n"],"mappings":"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","ignoreList":[]}